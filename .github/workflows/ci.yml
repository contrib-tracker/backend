name: CI
on:
  push:
    branches:
      - cicdtest
    tags:
      - "*"
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  drupal_codequality:
    runs-on: ubuntu-latest
    container: hussainweb/drupalqa
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # Run using testsuites
      - name: Run linters
        run: grumphp run --testsuite=linters
      - name: Run code quality check
        run: grumphp run --testsuite=code_quality

  frontend_codequality:
    runs-on: ubuntu-latest
    container: node:lts
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Frontend Code Quality
        run: |
          cd web/themes/custom/contribtracker
          npm ci
          npm run lint

  drupal_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Get Cache Directories
        id: cache-dir
        run: |
          echo "composer-dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "npm-dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: |
            ${{ steps.cache-dir.outputs.composer-dir }}
            ${{ steps.cache-dir.outputs.npm-dir }}
          key: ${{ runner.os }}-npm-composer-${{ hashFiles('composer.lock', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-composer-

      - name: Setup DDEV
        uses: ddev/github-action-setup-ddev@v1
        with:
          # We will start DDEV after setting the environment
          autostart: false

      - name: Set the platform.sh token
        run: |
          ddev config global --instrumentation-opt-in=false
          ddev config global --web-environment-add="PLATFORMSH_CLI_TOKEN=${{ secrets.PLATFORMSH_CLI_TOKEN }}"
          ddev start

      - name: Install the site
        run: |
          ddev composer install
          ddev pull platform -y
          ddev drush deploy -y

      - name: Build front-end
        run: |
          cd web/themes/custom/contribtracker
          npm ci
          gulp

      - name: Run phpstan
        run: ddev php ./vendor/bin/grumphp run --tasks=phpstan

      - name: Test
        run: |
          ddev phpunit --testsuite unit
          ddev phpunit --bootstrap=./vendor/weitzman/drupal-test-traits/src/bootstrap-fast.php --configuration ./phpunit.xml --testsuite existing-site

  frontend_vr:
    permissions:
      packages: read
      contents: read
    # needs: [frontend_codequality]
    runs-on: ubuntu-latest
    continue-on-error: true
    # container: skippednote/drupal-cypress:1.0.6
    container: node:lts
    env:
      # For Cypress.
      CYPRESS_ADMIN_USERNAME: ct-admin
      CYPRESS_ADMIN_PASSWORD: ct-admin
    services:
      mariadb:
        image: ghcr.io/contrib-tracker/backend-db:main
        env:
          ALLOW_EMPTY_PASSWORD: "yes"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Get Cache Directories
        id: cache-dir
        run: |
          echo "composer-dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "npm-dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache-dir.outputs.composer-dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache-dir.outputs.npm-dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Test
        run: |
          ./.github/ci.sh
          composer install -o --no-progress
          ./vendor/bin/drush deploy -y
          ./vendor/bin/drush upwd ct-admin "ct-admin"
          cd web/themes/custom/contribtracker
          npm ci --cache $CI_PROJECT_DIR/.npm --prefer-offline
          npm run build
          npm run vr

      - name: Archive Cypress recordings
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-recordings
          path: |
            web/themes/custom/contribtracker/cypress/screenshots
            web/themes/custom/contribtracker/cypress/videos
          retention-days: 3
